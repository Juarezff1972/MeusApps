       PROGRAM FRACTAIS;
{ARGUMENTS  COMMAND CHARACTER COMMAND}

VAR 
           TURTLEX,          {REAL POSITION OF TURTLE}
           TURTLEY:   REAL;  {POSITION OF TURTLE}
           TURTLEDIR,        {DIRECTION OF TURTLE (INITIALIZED TO 0)}
           TURTLEDIRN    {NUNBER OF POSSIBLE DIRECTIONS (CODE AS EVEN INTEGER)}
           TSTACKX[],    {STACKS OF TURTLE X POSITIONS}
           TSTACKY[],    {STACKS OF TURTLE Y POSITIONS}
           TSTACKDIR[],  {STACKS OF TURTLE DIRECTIONS}
           TSTACKSIZE,   {SIZE OF TURTLE STACK}
           TSTACKMAX,    {MAXIMAL SIZE OF TURTLE STACK}
           CO[],         {ARRAY OF TURTLEDIRN COSINE VALUES}
           SI[]: INTEGER; {ARRAY OF TURTLEDIRN SINE VALUES}

BEGIN
         IF (COMMAND = 'F' OR COMMAND = 'f') THEN
           TURTLEX:= TURTLEX + COS[TURTLEDIR]
           TURTLEY:= TURTLEY + SIN[TURTLEDIR]
         ELSE IF (COMMAND = '+') THEN 
           TURTLEDIR := TURTLE - 1;
         END;
         IF (TURTLEDIR <0 ) THEN
          TURTLEDIR :=TURTLEDIRN - 1  
         ELSE IF (COMMAND = '-') THEN 
          TURTLEDIR := TURTLEDIR + 1;
         END;        
         IF (TURTLEDIR > TURTLEDIRN ) THEN
          TURTLEDIR := 0
         ELSE IF (COMMAND = 'I') THEN
          TURTLEDIR := TURTLEDIR + TURTLEDIRN/2;
         END;
         IF (TURTLEDIR > TURTLEDIRN) THEN
         TURTLEDIR := TURTLEDIR - TURTLEDIRN
         ELSE IF (COMMAND = '[') THEN
         IF (STARCKSIZE = TSTACKMAX) THEN
         PRINT ('ERROR : MAXIMAL STACKS SIZE EXCEEDED.');
         EXIT PROGRAM;
         END;
         TSTACKX [STACKSIZE] := TURTLEX;
         TSTACKY [STACKSIZE] := TURTLEY;
         TSTACKDIR [STACKSIZE] := TURTLEDIR;
         TSTACKSIZE := TSTACKSIZE + 1;
         IF (COMMAND = ']') THEN 
         IF (TSTACKSIZE = 0) THEN
         PRINT ('ERROR : STACK EMPTY.');
         END;         
         EXIT PROGRAM;
         TSTACKSIZE := TSTACKSIZE - 1;
         TURTLEX := TSTACKX[TSTACKSIZE];
         TURTLEY := TSTACKY[TSTACKSIZE];
         TURTLEDIR := TSTACKDIR[TSTACKSIZE];
        
END.
 