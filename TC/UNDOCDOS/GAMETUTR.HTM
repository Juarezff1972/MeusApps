<HTML>
<HEAD>
<TITLE>A small game tutorial</TITLE>
</HEAD>

<BODY link="blue" vlink="purple" background="bmain.gif">
<!-- *** a blank table to get text of the left margin in NETSCAPE -->
<table align=left border=0 width="100%">
<td width="4%"></td>
<td width="96%">

<p>
<H1>A small game tutorial</H1>
</p>

<p align=left><font color=black size=2 face="Comic Sans MS">
This is a small tutorial on how to create games using C and Assembly.<br>
<br>
In this tutorial, we will learn how to create fast graphics and sizzling sound, as well as how to program smart enemies, and different levels of play without re-writing all the code.<br>
<br>
We will create a small game engine that will take data as input and then display the current screen status.<br>
<br>
You can create new levels by simply typing in some text in an ascii text editor.  That's it.  No new code or anything.  The game engine we create does it all.<br>
<br>
We will be creating a small 'PAC-MAN' like game with all the ghosts and goodies.  Once finished with one level, you move on to the next, and the next; as many as are easily created from an ascii text editor.<br>
<br>
We will be creating 'BURF-MAN'.  The name?  I was typing, thought <i>barfman</i> would be fine, mistyped a 'U' instead of the 'A' and the name stuck.  Anyway, Burfman is, as stated above, a PAC-MAN like game.  We will write the code and necassary data files to create burfman starting with simple level processing and writing code to create large level capabilities.<br>
<br>
This game tutorial contains ZIP files containing each individual step, with the last containing the final product waiting for you to create your levels of play.<br>
<br>
The layout of these files are:<br>
<br>
  GAMETUT1.ZIP     -  The code and tutorial for the first step<br>
  GAMETUT2.ZIP     -  The code and tutorial for the second step<br>
    ...<br>
  GAMETUT<i>n</i>.ZIP     -  The code and tutorial for the <i>n</i>th step<br>
  BURFMAN.ZIP      -  The finished code for you to create your levels of play<br>
<br>
Each GAMETUT<i>n</i>.ZIP file will contain documentation and the code to that step. You should start with GAMETUT1.ZIP and proceed to the next tutorial in order explained above.  However, each step includes the current 'version' of code from the last step.  This way you can start at any step you want.  Assuming you will start at the first step, I will not document previous steps
in each step of the tutorial as I proceed.<br>
<br>
Each step is due out about every month.  Sometimes sooner, sometimes later.<br>
<br>
If you find an error or just can not figure out why I did what I did, let me know.  I can be reached <A HREF="mailme.htm">here</A>. If I find any errors, or received notices of errors, I will fix and document
them in the current version of code.<br>
<br>
Here are the files:<br>
<b>Step 1</b>:  <A HREF="gametut1.zip">GAMETUT1.ZIP</A> (6k) - (25 Feb 1998) Game grid and screen creation<br>
<b>Step 2</b>:  <A HREF="gametut2.zip">GAMETUT2.ZIP</A> (6k) - (13 June 1998) Keyboard input and 'smart' enemies.<br>
<b>Step 3</b>:  Character animation.<br>
<b>Step 4</b>:  Adding sound using the Sound Blaster.<br>
<b>Step 5</b>:  Adding timed interval bonus items (timed interval programming).<br>
<b>Step 6</b>:  Wrap up.  Includes full game source.<br>
<br>
<br><br>
All rights reserved.<br>
<A HREF="legal.htm"><font size=1>Legal Notice</font></A><br>
<i>Copyright &copy; 1984-1999  Forever Young Software<BR></i>
<A HREF="index.htm"><IMG SRC="gohome.gif" ALT="Return to My Home Page" ALIGN=middle WIDTH=44 HEIGHT=39 border=0></A>
<a HREF="index.htm">Return to My Home Page</A>
</P>
</td>
</table>
</BODY>
</HTML>
